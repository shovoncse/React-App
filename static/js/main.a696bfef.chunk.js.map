{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","map","contact","id","payload","filter","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","console","log","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","color","float","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","protoTypes","PropTypes","string","isRequired","palceholder","func","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","EditContacts","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a696bfef.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios' \r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      }\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: 'Jhon Doe', \r\n      //   email: 'jdoe@gamil.com',\r\n      //   phone: '01734548565'\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: 'Jack Doson', \r\n      //   email: 'jack@gamil.com',\r\n      //   phone: '017324234985'\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: 'Mishele Obama', \r\n      //   email: 'mishel@gamil.com',\r\n      //   phone: '0171843423424'\r\n      // },\r\n      // {\r\n      //   id: 4,\r\n      //   name: 'Barek Obama', \r\n      //   email: 'bakervai@gamil.com',\r\n      //   phone: '01234356985'\r\n      // }  \r\n    ],\r\n\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action))\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer  = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  }\r\n  \r\n  onDeleteClick = async (id, dispatch) => {\r\n    \r\n      try {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});  \r\n      } catch (error) {\r\n        console.log(error)\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});        \r\n      } \r\n  }\r\n\r\n\r\n  render() {\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n\r\n        <h4>{name}{' '} <i style={{cursor: 'pointer'}} onClick={this.onShowClick} className=\"fas fa-sort-down\"></i>\r\n        \r\n        <i \r\n        className=\"fas fa-times\" \r\n        style={{\r\n          color: 'red', \r\n          cursor: 'pointer',\r\n          float: 'right'\r\n          }} \r\n        onClick={this.onDeleteClick.bind(this, id, dispatch)}>\r\n\r\n        </i>\r\n\r\n        <Link to={`/contact/edit/${id}`}>\r\n          <i \r\n          className=\"fas fa-pencil-alt\" \r\n          style={{\r\n            cursor:'pointer',\r\n            color:'black',\r\n            float:'right',\r\n            marginRight:'1rem'\r\n          }}></i>\r\n        </Link>\r\n        </h4>\r\n         {showContactInfo? (\r\n          <ul className=\"list-group\">\r\n           <li className=\"list-group-item\">Email: {email}</li>\r\n           <li className=\"list-group-item\">Phone: {phone}</li>\r\n         </ul>): null\r\n         }\r\n         </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context'\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <React.Fragment>\r\n            <h1 className=\"display-4 mb-2\"> <span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map( contact => ( <Contact key = {contact.id} contact = {contact} />))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classname'\r\n\r\nconst TextInputGroup = ({label,name,value,placeholder,type,onChange,error}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input \r\n      type={type} \r\n      name={name} \r\n      className={classnames('form-control', 'form-control-lg', {'is-invalid':error})}\r\n      placeholder ={placeholder} \r\n      value = {value}\r\n      onChange ={onChange}\r\n      // onChange ={this.onNameChange}\r\n      />\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.protoTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  palceholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n\r\n class AddContact extends Component {\r\n   state = {\r\n     name: '',\r\n     email: '', \r\n     phone: '',\r\n     errors: {}\r\n   };\r\n\r\n  //  onNameChange = e => this.setState({name: e.target.value});\r\n  //  onEmailChange = e => this.setState({email: e.target.value});\r\n  //  onPhoneChange = e => this.setState({phone: e.target.value}); \r\n  onChange = e => this.setState({[e.target.name]: e.target.value}); \r\n\r\n  onSubmit = async (dispatch,e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone} = this.state;\r\n\r\n    if (name === '') {\r\n     this.setState({errors: {name: 'Name is required'}});\r\n     return;\r\n    }\r\n    if (email === '') {\r\n     this.setState({errors: {email: 'Email is required'}});\r\n     return;\r\n    }\r\n    if (phone === '') {\r\n     this.setState({errors: {phone: 'Phone is required'}});\r\n     return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n      errors: {}\r\n    }\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact) \r\n    dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: ''\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const {name, email, phone,errors} = this.state;\r\n    return (\r\n    <Consumer>\r\n      {value => {\r\n\r\n        const {dispatch} = value;\r\n\r\n        return(\r\n          <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n            <TextInputGroup \r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value = {name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n             />\r\n            <TextInputGroup \r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value = {email}\r\n              onChange={this.onChange}\r\n              error={errors.email}\r\n             />\r\n            <TextInputGroup \r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter phone\"\r\n              value = {phone}\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n             />\r\n            <input type=\"submit\" value=\"Add\" className=\"btn btn-block btn-dark\"/>\r\n          </form>\r\n        </div>\r\n      </div>\r\n        )\r\n      }}\r\n    </Consumer>\r\n    )\r\n    \r\n  \r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport axios from 'axios'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n\r\n class EditContact extends Component {\r\n   state = {\r\n     name: '',\r\n     email: '', \r\n     phone: '',\r\n     errors: {}\r\n   };\r\n  \r\n  async componentDidMount(){\r\n    const {id} =  this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n    \r\n  }\r\n  onChange = e => this.setState({[e.target.name]: e.target.value}); \r\n\r\n  onSubmit = async (dispatch,e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone} = this.state;\r\n\r\n    if (name === '') {\r\n     this.setState({errors: {name: 'Name is required'}});\r\n     return;\r\n    }\r\n    if (email === '') {\r\n     this.setState({errors: {email: 'Email is required'}});\r\n     return;\r\n    }\r\n    if (phone === '') {\r\n     this.setState({errors: {phone: 'Phone is required'}});\r\n     return;\r\n    }\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      errors: {}\r\n    }\r\n\r\n    const {id} =  this.props.match.params;\r\n\r\n    const res = await axios.put('https://jsonplaceholder.typicode.com/users/'+id, updateContact) \r\n\r\n    console.log(res.data)\r\n    \r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: ''\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const {name, email, phone,errors} = this.state;\r\n    return (\r\n    <Consumer>\r\n      {value => {\r\n\r\n        const {dispatch} = value;\r\n\r\n        return(\r\n          <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n            <TextInputGroup \r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value = {name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n             />\r\n            <TextInputGroup \r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value = {email}\r\n              onChange={this.onChange}\r\n              error={errors.email}\r\n             />\r\n            <TextInputGroup \r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter phone\"\r\n              value = {phone}\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n             />\r\n            <input type=\"submit\" value=\"Update\" className=\"btn btn-block btn-dark\"/>\r\n          </form>\r\n        </div>\r\n      </div>\r\n        )\r\n      }}\r\n    </Consumer>\r\n    )\r\n    \r\n  \r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n const Header = (props) => {\r\n   const { branding } = props;\r\n  return (\r\n    // <div>\r\n    //   <h1 style={{color: 'red', fontSize: '50px'}}>{branding}</h1>\r\n    //   <h1 style={headingStyle}>{branding}</h1>\r\n    // </div>\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <ul className=\"navbar-nav pull-right\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i> Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i> About\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"></i> Contact Add\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>   \r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'MyApp'\r\n}\r\n Header.propTypes = {\r\n   branding: PropTypes.string.isRequired\r\n }\r\n\r\n//  const headingStyle = {\r\n//   color: 'red', \r\n//   fontSize: '50px'\r\n//  }\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      {/* <h1 className=\"display-4\">{props.match.params.id}</h1> */}\r\n      <p className=\"lead\">Simple React App to Manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">That page, Does not exist!</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  }\r\n  \r\n  \r\n\r\n  componentDidMount() {\r\n    console.log('ComponentDidMount...')\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n      title: data.title,\r\n      body: data.body,\r\n    }))\r\n  }\r\n  \r\n  // componentWillMount() {\r\n  //   console.log('ComponentWillMount...')\r\n  // }\r\n  \r\n  // componentDidUpdate() {\r\n  //   console.log('ComponentUpdateUpdate...')\r\n  // }\r\n  \r\n  // componentWillUpdate() {\r\n  //   console.log('ComponentWillUpdate...')\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('ComponentWillReceiveProps...')\r\n  // }\r\n\r\n  // static getDerivedStateFormProps(nextProps, prevState){\r\n  //   return {\r\n  //     test: 'something'\r\n  //   }\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState){\r\n  //   console.log('getSnapshotBeforeUpdate...')\r\n  // }\r\n\r\n  render() {\r\n    const {title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default  Test;","import React from 'react';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContacts from './components/contacts/EditContacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              {/* <Route exact path=\"/about/:id\" component={About} /> */}\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n          \n        </div>\n      </Router>\n    </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}